generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model Profile {
  id       String @id @default(uuid())
  userId   String @unique
  name     String @db.VarChar(100)
  imageUrl String @db.Text
  email    String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  servers  Server[]
  members  Member[]
  channels Channel[]
}

model Server {
  id         String @id @default(uuid())
  name       String @db.VarChar(100)
  imageUrl   String @db.Text
  inviteCode String @db.Text
  profileId  String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  profile Profile @relation(fields: [profileId], references: [id], onDelete: Cascade)

  members  Member[]
  channels Channel[]

  @@index([profileId])
}

enum MemberRole {
  ADMIN
  MODERATOR
  GUEST
}

model Member {
  id        String     @id @default(uuid())
  role      MemberRole @default(GUEST)
  profileId String
  serverId  String

  profile Profile @relation(fields: [profileId], references: [id], onDelete: Cascade)
  server  Server  @relation(fields: [serverId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([profileId])
  @@index([serverId])
}

enum ChanelType {
  Text
  AUDIO
  VIDEO
}

model Channel {
  id        String     @id @default(uuid())
  name      String     @db.VarChar(250)
  type      ChanelType @default(Text)
  profileId String
  serverId  String

  profile Profile @relation(fields: [profileId], references: [id], onDelete: Cascade)
  server  Server  @relation(fields: [serverId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([profileId])
  @@index([serverId])
}
